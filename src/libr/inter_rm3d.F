
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C$+									C
C			ROTAZIONI 3D 					C
C$-									C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	SUBROUTINE MATROT(A,PSI,TET,PHI)
	ENTRY  MATROT_DEG(A,PSI,TET,PHI)

C	CALCOLA LA MATRICE DI ROTAZIONE 3D A(3,3)

	PARAMETER (DEGSURAD=57.2957795)
	PARAMETER (RADSUDEG=1./DEGSURAD)

	DIMENSION A(3,3)

	SINPSI=SIN(PSI*RADSUDEG)
	COSPSI=COS(PSI*RADSUDEG)	

	SINTET=SIN(TET*RADSUDEG)
	COSTET=COS(TET*RADSUDEG)	

	SINPHI=SIN(PHI*RADSUDEG)
	COSPHI=COS(PHI*RADSUDEG)	
	GOTO 100

	ENTRY  MATROT_RAD(A,PSI,TET,PHI)

	SINPSI=SIN(PSI)
	COSPSI=COS(PSI)	

	SINTET=SIN(TET)
	COSTET=COS(TET)	

	SINPHI=SIN(PHI)
	COSPHI=COS(PHI)	

100	A(1,1)= COSPSI*COSTET*COSPHI-SINPSI*SINPHI
	A(1,2)= COSPSI*COSTET*SINPHI+SINPSI*COSPHI
	A(1,3)=-COSPSI*SINTET

	A(2,1)=-SINPSI*COSTET*COSPHI-COSPSI*SINPHI
	A(2,2)=-SINPSI*COSTET*SINPHI+COSPSI*COSPHI
	A(2,3)= SINPSI*SINTET

	A(3,1)= SINTET*COSPHI
	A(3,2)= SINTET*SINPHI
	A(3,3)= COSTET

	RETURN

	END

	SUBROUTINE ROTATE(A,XO,YO,ZO,XN,YN,ZN)

C	ROTATE   3D XN()=A(,)*XO()

	DIMENSION A(3,3)

	XXO=XO
	YYO=YO
	ZZO=ZO

	XN=A(1,1)*XXO + A(1,2)*YYO + A(1,3)*ZZO
	YN=A(2,1)*XXO + A(2,2)*YYO + A(2,3)*ZZO
	ZN=A(3,1)*XXO + A(3,2)*YYO + A(3,3)*ZZO

	RETURN

	END

	SUBROUTINE ROTATES(A,XO,YO,ZO)

C	ROTATE  3D    XO()=A(,)*XO()

	DIMENSION A(3,3)

	XXO=XO
	YYO=YO
	ZZO=ZO

	XO=A(1,1)*XXO + A(1,2)*YYO + A(1,3)*ZZO
	YO=A(2,1)*XXO + A(2,2)*YYO + A(2,3)*ZZO
	ZO=A(3,1)*XXO + A(3,2)*YYO + A(3,3)*ZZO

	RETURN

	END

	SUBROUTINE POLCART(RR,TH,PH,X0,Y0,Z0)
	ENTRY  POLCART_DEG(RR,TH,PH,X0,Y0,Z0)

C	TRASFORMAZIONE DELLE COORDINATE DA POLARI RR,TH,PH
C					 A CARTESIANE X,Y,Z

	PARAMETER (DEGSURAD=57.2957795)
	PARAMETER (RADSUDEG=1./DEGSURAD)

	SINTH=SIN(TH*RADSUDEG)
	COSTH=COS(TH*RADSUDEG)
	SINPH=SIN(PH*RADSUDEG)
	COSPH=COS(PH*RADSUDEG)
	GOTO 100

	ENTRY  POLCART_RAD(RR,TH,PH,X0,Y0,Z0)

	SINTH=SIN(TH)
	COSTH=COS(TH)
	SINPH=SIN(PH)
	COSPH=COS(PH)

100	X0 = RR * SINTH * COSPH
	Y0 = RR * SINTH * SINPH
	Z0 = RR * COSTH

	RETURN

	END

	SUBROUTINE CARTPOL(X,Y,Z,RR,TH,PH)
	ENTRY  CARTPOL_DEG(X,Y,Z,RR,TH,PH)

C	TRASFORMAZIONE DELLE COORDINATE DA CARTESIANE X,Y,Z
C					 A POLARI RR,TH,PH

	PARAMETER (DEGSURAD=57.2957795)
	PARAMETER (RADSUDEG=1./DEGSURAD)

	logical*1 DEGREES

	DEGREES=.TRUE.
	GOTO 100

	ENTRY  CARTPOL_RAD(X,Y,Z,RR,TH,PH)
	DEGREES=.FALSE.

100	TH=0
	TH=0
	RR=SQRT(X*X+Y*Y+Z*Z)
	IF(RR.EQ.0) RETURN

	COSTH=Z/RR
	IF(ABS(COSTH).GT.1) COSTH=SIGN(1.,COSTH)
	TH=ACOS(COSTH)
	IF(DEGREES) TH=TH*DEGSURAD

	IF(X.EQ.0 .AND. Y.EQ.0) RETURN

	PH=ATAN2(Y,X)
	IF(DEGREES) PH=PH*DEGSURAD

	RETURN

	END

	SUBROUTINE MOV3DD(X1,Y1,Z1,X2,Y2,Z2,DD,X,Y,Z)

	XX=SQRT( (X2-X1)**2 + (Y2-Y1)**2 + (Z2-Z1)**2 )

	ALF=X2-X1
	BET=Y2-Y1
	GAM=Z2-Z1

	IF(XX.NE.0) TT=DD/XX

	XX=X1+ALF*TT
	YY=Y1+BET*TT
	ZZ=Z1+GAM*TT

	X=XX
	Y=YY
	Z=ZZ

	RETURN

	END

	SUBROUTINE MOV3TT(X1,Y1,Z1,X2,Y2,Z2,TT,X,Y,Z)

	ALF=X2-X1
	BET=Y2-Y1
	GAM=Z2-Z1

	XX=X1+ALF*TT
	YY=Y1+BET*TT
	ZZ=Z1+GAM*TT

	X=XX
	Y=YY
	Z=ZZ

	RETURN

	END

	SUBROUTINE M3D_ADD(A,B,C)

C	SOMMA 2 MATRICI 3D

	DIMENSION A(3,3),B(3,3),C(3,3)

	DO I=1,3
	DO J=1,3
		C(I,J)=A(I,J)+B(I,J)
	ENDDO
	ENDDO

	RETURN

	END

	SUBROUTINE M3D_SUB(A,B,C)

C	SOTTRAE 2 MATRICI 3D

	DIMENSION A(3,3),B(3,3),C(3,3)

	DO I=1,3
	DO J=1,3
		C(I,J)=A(I,J)-B(I,J)
	ENDDO
	ENDDO

	RETURN

	END

	SUBROUTINE M3D_MUL(A,B,C)

C	MOLTIPLICA 2 MATRICI 3D

	DIMENSION A(3,3),B(3,3),C(3,3)
	DOUBLE PRECISION AA(3,3),BB(3,3),TT

	DO I=1,3
	DO J=1,3
		AA(I,J)=A(I,J)
		BB(I,J)=B(I,J)
	ENDDO
	ENDDO

	DO I=1,3
	DO J=1,3
	   TT=0
	   DO L=1,3
		TT=TT+AA(I,L)*BB(L,J)
	   ENDDO
	   C(I,J)=TT
	ENDDO
	ENDDO

	RETURN

	END

	SUBROUTINE M3D_DET(A,DET)

C	CALCOLA IL DETERMINANTE DI UNA MATRICE 3D

	DIMENSION A(3,3)
	DOUBLE PRECISION AA(3,3),DDET

	DO I=1,3
	DO J=1,3
		AA(I,J)=A(I,J)
	ENDDO
	ENDDO

	DDET=0
	I=1
	I1=2
	I2=3
	DO J=1,3
	   J1=MOD(J  ,3)+1
	   J2=MOD(J+1,3)+1
	   DDET=DDET+AA(I,J)*(AA(I1,J1)*AA(I2,J2)-AA(I1,J2)*AA(I2,J1))
	ENDDO
	DET=DDET

	RETURN

	END

	SUBROUTINE M3D_INV(A,B,DET)

C	CALCOLA L'INVERSA DI UNA MATRICE 3D

	DIMENSION A(3,3),B(3,3)
	DOUBLE PRECISION AA(3,3),DDET

	DO I=1,3
	DO J=1,3
		AA(I,J)=A(I,J)
	ENDDO
	ENDDO

	DDET=0
	I=1
	I1=2
	I2=3
	DO J=1,3
	   J1=MOD(J  ,3)+1
	   J2=MOD(J+1,3)+1
	   DDET=DDET+AA(I,J)*(AA(I1,J1)*AA(I2,J2)-AA(I1,J2)*AA(I2,J1))
	ENDDO
	DET=DDET
	IF(DET.EQ.0) RETURN
	DDET=1./DDET
	DO I=1,3
	   I1=MOD(I  ,3)+1
	   I2=MOD(I+1,3)+1
	   DO J=1,3
		J1=MOD(J  ,3)+1
		J2=MOD(J+1,3)+1
		B(I,J)=DDET*(AA(J1,I1)*AA(J2,I2)-AA(J1,I2)*AA(J2,I1))
	ENDDO
	ENDDO

	RETURN

	END

